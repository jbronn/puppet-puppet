# == Class: puppet::agent
#
# Installs Puppet and an agent configuration file (puppet.conf).
#
# === Parameters
#
# [*confdir*]
#   The path of the configuration directory, defaults to '/etc/puppet'.
#
# [*owner*]
#   The owner of the configuration directory and file, defaults to 'root'.
#
# [*group*]
#   The group of the configuration directory and file, defaults to the
#   root group of the platform (e.g., 'root', 'wheel', or 'sys').
#
# [*mode*]
#   The mode of the configuration directory and file, defaults to '0640'.
#
# [*server*]
#   The hostname of the Puppet master.  Defaults to "puppet.${domain}".
#
# [*pluginsync*]
#   Whether or not to enable `pluginsync` in the configuration file.
#   Defaults to true.
#
# [*report*]
#   Whether to enable reports; default is true.
#
# [*config*]
#   Advanced option to overide the hash used to create the agent
#   `sys::inifile` resource for puppet.conf.
#
class puppet::agent(
  $confdir    = $puppet::params::confdir,
  $owner      = 'root',
  $group      = $puppet::params::root_group,
  $mode       = '0640',
  $server     = $puppet::params::server,
  $pluginsync = $puppet::params::pluginsync,
  $report     = $puppet::params::report,
  $config     = undef,
) inherits puppet::params {
  include puppet

  file { $confdir:
    ensure  => directory,
    owner   => $owner,
    group   => $group,
    mode    => $mode,
    require => Class['puppet'],
  }

  # Using either a default or the user-supplied hash for constructing
  # the Puppet configuration file with `sys::inifile`.
  if $config {
    $config_hash = $config
  } else {
    $config_hash = {
      'agent' => {
        'confdir'    => $confdir,
        'pluginsync' => $pluginsync,
        'report'     => $report,
        'server'     => $server,
      }
    }
  }

  $config_file = "${confdir}/puppet.conf"
  sys::inifile { $config_file:
    alias   => 'puppet.conf',
    config  => $config_hash,
    header  => '# Autogenerated by puppet::agent; do not modify.',
    indent  => 4,
    owner   => $owner,
    group   => $group,
    mode    => $mode,
    require => Class['puppet'],
  }
}
