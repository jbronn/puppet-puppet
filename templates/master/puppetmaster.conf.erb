Listen 8140
<VirtualHost *:8140>
  ServerName <%= scope['puppet::master::certname'] %>

  SSLEngine on
  SSLProtocol <%= scope['puppet::master::ssl_protocols'].join(' ') %>
  SSLCipherSuite <%= scope['puppet::master::ssl_ciphers'].join(':') %>
  SSLHonorCipherOrder on

  SSLCertificateFile <%= scope['puppet::master::ssldir'] %>/certs/<%= scope['puppet::master::certname'] %>.pem
  SSLCertificateKeyFile <%= scope['puppet::master::ssldir'] %>/private_keys/<%= scope['puppet::master::certname'] %>.pem
  SSLCertificateChainFile <%= scope['puppet::master::ssldir'] %>/ca/ca_crt.pem
  SSLCACertificateFile <%= scope['puppet::master::ssldir'] %>/ca/ca_crt.pem
  SSLCARevocationFile <%= scope['puppet::master::ssldir'] %>/ca/ca_crl.pem
  SSLVerifyClient optional
  SSLVerifyDepth 1
  SSLOptions +StdEnvVars +ExportCertData

  RequestHeader unset X-Forwarded-For
  RequestHeader set X-SSL-Subject %{SSL_CLIENT_S_DN}e
  RequestHeader set X-Client-DN %{SSL_CLIENT_S_DN}e
  RequestHeader set X-Client-Verify %{SSL_CLIENT_VERIFY}e

  PassengerEnabled On
  DocumentRoot <%= scope['puppet::master::rack::puppetmaster'] %>/public/
  <Directory <%= scope['puppet::master::rack::puppetmaster'] %>/>
    Options None
    AllowOverride None
    Order allow,deny
    Allow from all
  </Directory>

<% if scope['puppet::master::external_ca'] -%>
  SSLProxyEngine On
  # Proxy all requests that start with things like /production/certificate to the CA
  ProxyPassMatch ^/([^/]+/certificate.*)$ <%= scope['puppet::master::external_ca'] %>/$1
  ProxyPassReverse ^(/.*?)/(certificate.*?)/(.*)$ <%= scope['puppet::master::external_ca'] %>/$1

  <Location ~ "/[^/]+/certificate">
    PassengerHighPerformance Off
  </Location>

<% end -%>
  LogLevel warn
  ErrorLog <%= scope['apache::params::logs'] %>/master_error.log
  CustomLog <%= scope['apache::params::logs'] %>/master_access.log combined
</VirtualHost>
