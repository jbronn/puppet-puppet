Listen 8140
<VirtualHost *:8140>
  ServerName <%= scope['puppet::master::certname'] %>

  SSLEngine on
  SSLProtocol <%= scope['puppet::master::ssl_protocols'].join(' ') %>
  SSLCipherSuite <%= scope['puppet::master::ssl_ciphers'].join(':') %>
  SSLHonorCipherOrder on

  SSLCertificateFile <%= scope['puppet::master::ssldir'] %>/certs/<%= scope['puppet::master::certname'] %>.pem
  SSLCertificateKeyFile <%= scope['puppet::master::ssldir'] %>/private_keys/<%= scope['puppet::master::certname'] %>.pem
  SSLCertificateChainFile <%= scope['puppet::master::ssldir'] %>/ca/ca_crt.pem
  SSLCACertificateFile <%= scope['puppet::master::ssldir'] %>/ca/ca_crt.pem
  SSLCARevocationFile <%= scope['puppet::master::ssldir'] %>/ca/ca_crl.pem
  SSLVerifyClient optional
  SSLVerifyDepth 1
  SSLOptions +StdEnvVars +ExportCertData

  RequestHeader unset X-Forwarded-For
  RequestHeader set X-SSL-Subject %{SSL_CLIENT_S_DN}e
  RequestHeader set X-Client-DN %{SSL_CLIENT_S_DN}e
  RequestHeader set X-Client-Verify %{SSL_CLIENT_VERIFY}e

<% if scope['ruby::passenger::version'].start_with? '3' -%>
  RackAutoDetect On
<% else -%>
  PassengerEnabled On
<% end -%>
  DocumentRoot <%= scope['puppet::master::confdir'] %>/rack/puppetmaster/public/
  <Directory <%= scope['puppet::master::confdir'] %>/rack/puppetmaster/>
    Options None
    AllowOverride None
    Order allow,deny
    Allow from all
  </Directory>

  LogLevel warn
  ErrorLog <%= scope['puppet::master::logdir'] %>/master_error.log
  CustomLog <%= scope['puppet::master::logdir'] %>/master_access.log combined
</VirtualHost>
